/*
 * Copyright (c) 2020 Michael Leith
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "io.freefair.aggregate-javadoc" version "5.3.0"
    id 'maven-publish'
    id 'signing'
}

project(':mockery') { version = '1.0.0' }
project(':mockery-annotations') { version = '1.0.0' }

def getPassword(String keyChain) {
    def stdout = new ByteArrayOutputStream()
    def stderr = new ByteArrayOutputStream()
    exec {
        commandLine 'security', '-q', 'find-generic-password', '-a', System.getProperty("user.name"), '-s', keyChain, '-w'
        standardOutput = stdout
        errorOutput = stderr
        ignoreExitValue true
    }
    //noinspection GroovyAssignabilityCheck
    stdout.toString().trim()
}

configure(subprojects.findAll()) {
    configurations {
        deployerJars
    }

    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    if (!it.name.contains('benchmarks')) {
        def key = it.name

        javadoc {
            if(JavaVersion.current().isJava9Compatible()) {
                options.addBooleanOption('html5', true)
            }
        }

        publishing {
            repositories {
                maven {
                    // change URLs to point to your repos, e.g. http://my.org/repo
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
                        password = project.hasProperty('ossrhPassword') ? ossrhPassword : getPassword('ossrhPassword')
                    }
                }
            }
            publications {
                "$project.name"(MavenPublication) {
                    from components.java
                    groupId 'com.mikeleith.mockery'
                    artifactId project.name
                    version project.version

                    pom {
                        name = project.name
                        version project.version
                        description = 'A Minimal mocking framework for Java 8+'
                        url = 'https://github.com/MichaelLeith/Mockery'

                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'MichaelLeith'
                                name = 'Michael Leith'
                                url = 'https://github.com/MichaelLeith'
                            }
                        }
                        scm {
                            url = 'https://github.com/MichaelLeith/Mockery.git'
                        }
                        issueManagement {
                            url = 'https://github.com/MichaelLeith/Mockery/issues'
                            system = 'GitHub issues'
                        }
                    }
                }
            }
        }

        signing {
            useInMemoryPgpKeys(findProperty("signing.keyId"), getPassword('mockery-signing'))
            sign publishing.publications."$key"
        }
    }
}


